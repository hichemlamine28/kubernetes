In troduction
    Un des plus puissants orchestrateurs de conteneurs (google)
    Comment Deployer, Utilser et maintenir des applications Sur Kubernetes
    Comment Faire le build des applications avec des conteneurs en utilisant Docker
    Comment Deployer un Cluster Kubernetes.


Origin of Kubernetes
    pic01:Before KUbernetes
    pic02:  Plusieurs applications ur meme serveur , Risk Potentiel,
            Une application peut à un moment donné consommer toutes les ressources allouées
            Ceci peut engendrer la hausse des couts
            si le serveur est down, toutes les applications sont ko
    
    pic03:  VMs sont preferés car elles permettent de reduire le cout, 
            une meilleure utilisation des ressources et une meilleure scalabilité ...
            Mais toujours probleme cout d'implementation, hardware et software sont necessaires ce qui augmene le cout
            Risque de sécurité: les chances de perte de données en virtualisation est commun
            indisponibilté: applications/assets indisponible la plupart du temps car les ressources sont utilsées par une autre application
            Limitations et restrictions: pas toute applications ou serveur capables de fonctionner sur des VMs, certains necessitent des machines hybrides
            Consommation du temps: un processus qui prend trop du temps, plusieurs étapes sont necessaires pour atteindre un resultat
    pic04:
            What about Kubernetes ? il fonctionne en deploiement des conteneurs
            Oui, Kubernetes fonctionne tres bien et peut toujours etre  la bonne solution to eviter tout ce qu'on vient de mentionner.

    pic05:  Commençons d'abord par la difference entre VM et kubernetes

What is Kubernetes
    Tout Simplement, plateforme open-source utilsée pour maintenir et deployer des conteneurs
    Dans la pratique, kubernetes est generalement utilsé avec Docker pour une meilleure implementation et controle des applications conteneurisées
    Application conteneurisée: builder une application avec tous ses fichiers, librariries, packages ... necessaires pour son bon fonctionnement sur differentes plateformes
    Kubernetes a été introduit en tant que projet Google et c'est le successeur de gogle Borg
    Démarré en 2014, son architecturele rend compatible pour les applications a runner sur cloud
    Cloud Native Computing mantient maintenant Kubernetes

    Portable et 100% open-source: Compatible avec plusieurs plateformes flexibilité
    Workload scalability: Tres efficace, serveur ajouté et arreté facilement, changement automatique des contenrurs en execution et possible de faire scale manuel aussi
    High Availability: Kubernetes offre la disponibilité des conteneurs et de l'infarastructure. Peut fonctionner sur n'importe quel environnement
    Designed for deployment: Accelere les test, deploiement, la gestion,des phases, ideal pour deploiement
    Service discovery and load balancing: permet d'exposer des coneytenurs utilisant des dns ou des ip, si le traffic est elevé il peut balancerr e distribuer le traffic pour que deploiement soit stable
    Storage orchestration: montage auto comme les volumes loacux ou les cloud
    Self healing: redemarrer les conteneur en echec, remplecer des conetenrurs, kill des conteneur qui ne repondent pas au check
    Rollout/Rollback auto: Desired State peut etre decrit en utilsant kubernetes, etatt actuel d'un conteneur change pour etre desired state 
    Automatic bin packing: kubernetes specifie les valeur ram cpu necessaire pour chaque conteneur,, une fois les ressources sont definies, la gestion devient plus facile et la price de decision plus simple
    









Installation fo Kubernetes on Ubuntu




Kubernetes Terminologies and Architecture



Uses Cases of Kubernetes



Kubernetes Demo




A comparative Analysis of Kubernetes and Docker




What are Orchestration Tools




How to set up simple Kubernetes Cluster using kops




Interview Questions


